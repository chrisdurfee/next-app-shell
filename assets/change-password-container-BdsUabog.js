var z=Object.defineProperty;var b=t=>{throw TypeError(t)};var G=(t,s,e)=>s in t?z(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var v=(t,s,e)=>G(t,typeof s!="symbol"?s+"":s,e),g=(t,s,e)=>s.has(t)||b("Cannot "+e);var a=(t,s,e)=>(g(t,s,"read from private field"),e?e.call(t):s.get(t)),c=(t,s,e)=>s.has(t)?b("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(t):s.set(t,e),d=(t,s,e,i)=>(g(t,s,"write to private field"),i?i.call(t,e):s.set(t,e),e),l=(t,s,e)=>(g(t,s,"access private method"),e);import{u as H,Y as x,s as Z,R as D,l as I,r as M,G as S,a as T,w as Y,e as k,O as F}from"./index-JROklvyp.js";import{c as N}from"./tooltip-DcnXGw52-BKMBeZUI.js";var p,h,n,o,r,y,C,L,q,A,E;const u=class u{constructor(s,e,i){c(this,r);c(this,p);c(this,h);c(this,n);c(this,o,[]);d(this,p,s),d(this,h,e),d(this,n,i)}validate(){return d(this,o,[]),l(this,r,y).call(this),l(this,r,C).call(this),l(this,r,L).call(this),l(this,r,q).call(this),l(this,r,A).call(this),l(this,r,E).call(this),{valid:a(this,o).length===0,errors:a(this,o)}}};p=new WeakMap,h=new WeakMap,n=new WeakMap,o=new WeakMap,r=new WeakSet,y=function(){a(this,n).length<u.MIN_LENGTH&&a(this,o).push(`Password must be at least ${u.MIN_LENGTH} characters long.`)},C=function(){/[A-Z]/.test(a(this,n))||a(this,o).push("Password must contain at least one uppercase letter.")},L=function(){/[a-z]/.test(a(this,n))||a(this,o).push("Password must contain at least one lowercase letter.")},q=function(){/\d/.test(a(this,n))||a(this,o).push("Password must contain at least one digit.")},A=function(){/[^a-zA-Z0-9]/.test(a(this,n))||a(this,o).push("Password must contain at least one special character (e.g., !@#$%^&*()).")},E=function(){const s=a(this,n).toLowerCase(),e=a(this,p).toLowerCase(),i=a(this,h).toLowerCase(),f=m=>{for(let w=0;w<=m.length-3;w++){const $=m.substring(w,w+3);if(s.includes($))return!0}return!1};(f(e)||f(i))&&a(this,o).push("Password must not contain parts of your name.")},v(u,"MIN_LENGTH",12);let P=u;const R=Z(({title:t,description:s})=>I({class:"flex flex-col space-y-1.5 p-6"},[M({class:"scroll-m-20 text-3xl font-bold tracking-tight"},t),s&&S({class:"text-base text-muted-foreground py-2 max-w-[700px]"},s)])),W=(t,s)=>{if(t!==s)return app.notify({title:"Error",description:"Passwords do not match.",type:"destructive"}),!1;const e="",i="";return new P(e,i,t).validate().valid?!0:(app.notify({title:"Error",description:"Password does not meet requirements.",type:"destructive"}),!1)},j=()=>D({class:"flex flex-col p-6 pt-0",submit:(t,s)=>{t.preventDefault();const e=s.data.password,i=s.data.confirmPassword;W(e,i)&&(app.notify({title:"All Done!",description:"You have successfully changed your password.",icon:T.circleCheck,type:"success"}),app.navigate("/"))},role:"form"},[x({class:"grid gap-4"},[N({type:"password",placeholder:"New Password",required:!0,bind:"password",pattern:"^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*\\W).{12,}$",title:"Password must be at least 12 characters long and include uppercase, lowercase, number, and special character.","aria-required":!0}),N({type:"password",placeholder:"Confirm New Password",required:!0,bind:"confirmPassword",pattern:"^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*\\W).{12,}$",title:"Password must be at least 12 characters long and include uppercase, lowercase, number, and special character.","aria-required":!0}),Y({type:"submit"},"Change Password")])]),O=()=>H({class:"flex flex-auto flex-col justify-center items-center"},[x({class:"rounded-xl sm:border sm:shadow-lg bg-card text-card-foreground shadow w-full mx-auto max-w-sm"},[R({title:"Change Password",description:"Choose a new password. Password must be at least 12 characters long and include uppercase, lowercase, number, and special character."}),j()])]),J=k({setData(){return new F({password:"",confirmPassword:""})},render(){return x({class:"flex flex-auto flex-col"},[O()])}});export{J as ChangePasswordContainer,J as default};
